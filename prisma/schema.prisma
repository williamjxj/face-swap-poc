generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  account      String    @unique
  lastLogin  DateTime? @map("last_login")
  lastLogout DateTime? @map("last_logout")
  targetTemplates       TargetTemplate[]
  faceSources     FaceSource[]
  generatedMedia  GeneratedMedia[]
}

model TargetTemplate {
  id            String    @id @default(uuid())
  filename          String
  type          String    // ENUM('video', 'image', 'gif', 'multi-face')
  filePath      String    @map("file_path")
  thumbnailPath String?   @map("thumbnail_path")
  fileSize      BigInt    @map("file_size")
  duration      Int?
  mimeType      String?   @map("mime_type")
  createdAt     DateTime  @default(now()) @map("created_at")
  authorId      String?   @map("author_id")
  usageCount    Int       @default(0) @map("usage_count")
  lastUsedAt    DateTime? @map("last_used_at")
  isActive      Boolean   @default(true) @map("is_active")
  author        User?     @relation(fields: [authorId], references: [id])
  generatedMedia GeneratedMedia[]
}

model FaceSource {
  id          String    @id @default(uuid())
  filename    String
  width       Int
  height      Int
  filePath    String    @map("file_path")
  fileSize    BigInt    @map("file_size")
  mimeType    String    @map("mime_type")
  createdAt   DateTime  @default(now()) @map("created_at")
  lastUsedAt  DateTime? @map("last_used_at")
  authorId    String?   @map("author_id")
  usageCount  Int       @default(0) @map("usage_count")
  isActive    Boolean   @default(true) @map("is_active")
  author      User?     @relation(fields: [authorId], references: [id])
  generatedMedia GeneratedMedia[]
}

model GeneratedMedia {
  id            String    @id @default(uuid())
  name          String
  type          String    // ENUM('video', 'image')
  tempPath      String?   @map("temp_path")
  filePath      String    @map("file_path")
  thumbnailPath String?   @map("thumbnail_path")
  fileSize      BigInt    @map("file_size")
  mimeType    String    @map("mime_type")
  createdAt     DateTime  @default(now()) @map("created_at")
  authorId      String?   @map("author_id")
  playCount     Int       @default(0) @map("play_count")
  downloadCount Int       @default(0) @map("download_count")
  isActive      Boolean   @default(true) @map("is_active")
  templateId    String?   @map("template_id")
  faceSourceId  String?   @map("face_source_id")
  author        User?     @relation(fields: [authorId], references: [id])
  targetTemplate TargetTemplate? @relation(fields: [templateId], references: [id])
  faceSource    FaceSource? @relation(fields: [faceSourceId], references: [id])
  isPaid        Boolean   @default(false)
  watermarkPath String?
}

model Guideline {
  id            String   @id @default(uuid())
  filename      String
  width         Int
  height        Int
  fileType      String   @map("file_type")
  fileSize      BigInt   @map("file_size")
  filePath      String    @map("file_path")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  isAllowed     Boolean  @default(true) @map("is_allowed")
}